buildscript {
	repositories {
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.7.4'
	}
}

plugins {
	id 'application'
	id 'java'
	id 'jacoco'
	id 'com.diffplug.spotless' version '6.10.0'
	id 'org.openjfx.javafxplugin' version '0.0.10'

	// For .exe creation
	id 'edu.sc.seis.launch4j' version '2.5.3'
}

apply plugin: 'info.solidsoft.pitest'

sourceCompatibility = '17'
def mainClassFullName = 'minisim.App'

repositories {
	mavenCentral()
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

	implementation 'com.google.guava:guava:31.0.1-jre'
}

application {
	mainClass = mainClassFullName
}

launch4j {
	mainClassName = mainClassFullName
	headerType = 'console'
	icon = '${projectDir}/src/main/resources/icons/atom.ico'
	outfile = 'MiniSim.exe'
	windowTitle = 'MiniSim'
	productName = 'MiniSim'
	fileDescription = 'MiniSim'
	language = 'ENGLISH_US'
	//bundledJrePath = '/Users/user/Downloads/jdk' // TODO solve problem of bundling JRE into exe file
}

tasks.named('test') {
	useJUnitPlatform()
}

// Format code always before compiling
tasks.compileJava.dependsOn(spotlessApply)

javafx {
	version = '18.0.2'
	modules = [ 'javafx.controls', 'javafx.graphics' ]
}

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	//ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
		setEncoding('utf-8')
	}

	java {
		target 'src/*/java/**/*.java'
		//importOrder()
		removeUnusedImports()
		eclipse()
	}
}

pitest {
	targetClasses = ['minisim.*']  //by default "${project.group}.*"
	//targetTests = []
	pitestVersion = '1.7.4' //not needed when a default PIT version should be used
	junit5PluginVersion = '0.15'
	//threads = 4
	outputFormats = ['HTML']
	//verbose = true
	timestampedReports = false
}
